name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 1 */2 *'

env:
  outPath: "/usr/local/lib/pam/pam_watchid.so"

jobs:
  build:
    strategy:
      matrix:
        version: [13, 14, 15]
        xcode-select: ["xcode", "clt"]
      fail-fast: false

    name: Build (macos-${{ matrix.version }}${{ matrix.xcode-select == 'clt' && ', Command Line Tools' || '' }})

    runs-on: macos-${{ matrix.version }}

    permissions:
      id-token: write
      contents: read
      attestations: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Switch to Xcode Command Line Tools
      if: ${{ matrix.xcode-select == 'clt' }}
      run: sudo xcode-select --switch /Library/Developer/CommandLineTools

    - name: Build
      run: make enable

    - name: Get Version
      id: getVersion
      if: ${{ matrix.xcode-select == 'xcode' && matrix.version == 15 }}
      run: echo "version=$(cat version)" >> "$GITHUB_OUTPUT"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: ${{ matrix.xcode-select == 'xcode' && matrix.version == 15 }}
      with:
        name: pam-watchid.so.${{ steps.getVersion.outputs.version }}
        path: ${{ env.outPath }}.${{ steps.getVersion.outputs.version }}
        if-no-files-found: error
        retention-days: ${{ github.event_name == 'pull_request' && 7 || 90 }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      if: ${{ matrix.xcode-select == 'xcode' && matrix.version == 15 }}
      with:
        subject-path: ${{ env.outPath }}.${{ steps.getVersion.outputs.version }}
